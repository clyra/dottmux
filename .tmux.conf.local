
# : << EOF

## LYRA CONF

# replace C-a by C-s as C-a clash with go to begin of line in shells
set -gu prefix2
unbind C-a
unbind C-b
set -g prefix2 C-s
bind C-s send-prefix2

# use v an h to split windows
bind h split-window -v
bind v split-window -h

# meta to navigate between panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

#unbind '"'
#unbind %


# toggle pane sincronization
bind s set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# enable logging plugin
set -g @plugin 'tmux-plugins/tmux-logging'

# -- navigation ----------------------------------------------------------------
# -- windows & pane creation ---------------------------------------------------
# new window retains current path, possible values are:
tmux_conf_new_window_retain_current_path=false

# new pane retains current path, possible values are:
tmux_conf_new_pane_retain_current_path=true
tmux_conf_new_pane_reconnect_ssh=true

# prompt for session name when creating a new session, possible values are:
tmux_conf_new_session_prompt=false


# terminal title
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_terminal_title="#h ❐ #S ● #I #W"



# -- clipboard -----------------------------------------------------------------
# in copy mode, copying selection also copies to the OS clipboard
# on macOS, this requires installing reattach-to-user-namespace, see README.md
# on Linux, this requires xsel or xclip
tmux_conf_copy_to_os_clipboard=false

# -- user customizations -------------------------------------------------------
# this is the place to override or undo settings
# increase history size
set -g history-limit 10000
# start with mouse mode enabled
#set -g mouse on
# force Vi mode
#   really you should export VISUAL or EDITOR environment variable, see manual
#set -g status-keys vi
set -g mode-keys vi

# move status line to top
set -g status-position top

# -- tpm -----------------------------------------------------------------------
# by default, launching tmux will update tpm and all plugins
tmux_conf_update_plugins_on_launch=true

# by default, reloading the configuration will update tpm and all plugins
tmux_conf_update_plugins_on_reload=true

# by default, reloading the configuration will uninstall tpm and plugins when no
# plugins are enabled
tmux_conf_uninstall_plugins_on_reload=true

# /!\ the tpm bindings differ slightly from upstream:
#   - installing plugins: <prefix> + I
#   - uninstalling plugins: <prefix> + Alt + u
#   - updating plugins: <prefix> + u
# /!\ do not add set -g @plugin 'tmux-plugins/tpm'
# /!\ do not add run '~/.tmux/plugins/tpm/tpm'
# to enable a plugin, use the 'set -g @plugin' syntax:

# visit https://github.com/tmux-plugins for available plugins
#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-cpu'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-logging'
#set -g @continuum-restore 'on'


# -- custom variables ----------------------------------------------------------
# to define a custom #{foo} variable, define a POSIX shell function between the
# '# EOF' and the '# "$@"' lines. Please note that the opening brace { character
# must be on the same line as the function name otherwise the parse won't detect
# it.
#
# then, use #{foo} in e.g. the 'tmux_conf_theme_status_left' or the
# 'tmux_conf_theme_status_right' variables.
# # /!\ do not remove the following line
# EOF
#
# # /!\ do not "uncomment" the functions: the leading "# " characters are needed
#
# weather() {
#   curl -m 1 wttr.in?format=3 2>/dev/null
#   sleep 900 # sleep for 15 minutes, throttle network requests whatever the value of status-interval
# }
#
# online() {
#   ping -c 1 1.1.1.1 >/dev/null 2>&1 && printf '✔' || printf '✘'
# }
#
# "$@"
# # /!\ do not remove the previous line
#
# new-session -n $HOST



